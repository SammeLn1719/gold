#!/bin/bash

# –†–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞: docker –∏–ª–∏ venv
MODE=${1:-auto}

echo "üöÄ –ó–∞–ø—É—Å–∫ Django –ø—Ä–æ–µ–∫—Ç–∞..."
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ Docker
start_with_docker() {
    echo "üì¶ –†–µ–∂–∏–º: Docker"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    if [ ! -f .env ]; then
        echo "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑ .env.example..."
        if [ -f .env.example ]; then
            cp .env.example .env
            echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."
        else
            echo "‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
        fi
    fi
    
    echo "üì¶ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    echo "üí° –ï—Å–ª–∏ —Å–±–æ—Ä–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "   docker-compose build --no-cache --progress=plain"
    echo ""
    docker-compose build --progress=plain
    
    echo ""
    echo "üê≥ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose up -d
    
    echo ""
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    sleep 5
    
    echo ""
    echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
    docker-compose exec -T web python manage.py migrate
    
    echo ""
    echo "üìä –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
    docker-compose exec -T web python manage.py collectstatic --noinput
    
    echo ""
    echo "‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
    echo ""
    echo "üìç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥—Ä–µ—Å–∞:"
    echo "   üåê –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:8000/"
    echo "   üîê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:     http://localhost:8000/admin/"
    echo ""
    echo "üí° –°–æ–∑–¥–∞–π—Ç–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥–æ–π:"
    echo "   docker-compose exec web python manage.py createsuperuser"
    echo "   –∏–ª–∏: make createsuperuser"
    echo ""
    echo "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:"
    echo "   docker-compose logs -f"
    echo "   –∏–ª–∏: make logs"
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
    echo "   docker-compose down"
    echo "   –∏–ª–∏: make down"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ venv
start_with_venv() {
    echo "üêç –†–µ–∂–∏–º: Virtual Environment (venv)"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    if ! command -v python3 &> /dev/null; then
        echo "‚ùå Python3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+."
        exit 1
    fi
    
    PYTHON_VERSION=$(python3 --version | cut -d' ' -f2 | cut -d'.' -f1,2)
    echo "‚úÖ –ù–∞–π–¥–µ–Ω Python –≤–µ—Ä—Å–∏–∏ $PYTHON_VERSION"
    echo ""
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if [ ! -d "venv" ]; then
        echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        python3 -m venv venv
        if [ $? -ne 0 ]; then
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è!"
            echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç venv: sudo apt install python3-venv"
            exit 1
        fi
        echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
    else
        echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    echo ""
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    echo "üîå –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    source venv/bin/activate
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
    echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
    pip install --upgrade pip -q
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ requirements.txt..."
    if [ -f requirements.txt ]; then
        pip install -r requirements.txt
        if [ $? -ne 0 ]; then
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π!"
            exit 1
        fi
        echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        echo "‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    echo ""
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if [ ! -f .env ]; then
        echo "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
        cat > .env << EOF
DEBUG=True
SECRET_KEY=$(python3 -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())')
ALLOWED_HOSTS=localhost,127.0.0.1
DATABASE_URL=sqlite:///db.sqlite3
EOF
        echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
    fi
    echo ""
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
    echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
    python manage.py migrate
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π!"
        exit 1
    fi
    echo ""
    
    # –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    echo "üìä –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
    python manage.py collectstatic --noinput
    echo ""
    
    echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!"
    echo ""
    echo "üìç –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   source venv/bin/activate"
    echo "   python manage.py runserver"
    echo ""
    echo "üí° –°–æ–∑–¥–∞–π—Ç–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥–æ–π:"
    echo "   source venv/bin/activate"
    echo "   python manage.py createsuperuser"
    echo ""
    echo "üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω:"
    echo "   –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:8000/"
    echo "   –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:     http://localhost:8000/admin/"
    echo ""
    echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
    python manage.py runserver
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å–∫–∞
if [ "$MODE" = "docker" ]; then
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker
    if ! command -v docker &> /dev/null; then
        echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker."
        exit 1
    fi
    if ! command -v docker-compose &> /dev/null; then
        echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose."
        exit 1
    fi
    start_with_docker
elif [ "$MODE" = "venv" ]; then
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ venv
    start_with_venv
else
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
    if command -v docker &> /dev/null && command -v docker-compose &> /dev/null; then
        echo "üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω Docker. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Docker-—Ä–µ–∂–∏–º."
        echo "üí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è venv –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ./start.sh venv"
        echo ""
        start_with_docker
    elif command -v python3 &> /dev/null; then
        echo "üîç Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è venv-—Ä–µ–∂–∏–º."
        echo ""
        start_with_venv
    else
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ Docker, –Ω–∏ Python3!"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞."
        exit 1
    fi
fi



